/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as CoperniqApi from "../../api/index";
import * as core from "../../core";
import { ProjectStatus } from "./ProjectStatus";

export const ProjectCreate: core.serialization.ObjectSchema<serializers.ProjectCreate.Raw, CoperniqApi.ProjectCreate> =
    core.serialization.object({
        title: core.serialization.string(),
        description: core.serialization.string().optional(),
        address: core.serialization.string(),
        trades: core.serialization.list(core.serialization.string()),
        clientId: core.serialization.string().optional(),
        workflowId: core.serialization.string().optional(),
        value: core.serialization.number().optional(),
        size: core.serialization.number().optional(),
        status: ProjectStatus.optional(),
        primaryEmail: core.serialization.string().optional(),
        primaryPhone: core.serialization.string().optional(),
        custom: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    });

export declare namespace ProjectCreate {
    interface Raw {
        title: string;
        description?: string | null;
        address: string;
        trades: string[];
        clientId?: string | null;
        workflowId?: string | null;
        value?: number | null;
        size?: number | null;
        status?: ProjectStatus.Raw | null;
        primaryEmail?: string | null;
        primaryPhone?: string | null;
        custom?: Record<string, unknown> | null;
    }
}
