/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as CoperniqApi from "../../api/index";
import * as core from "../../core";
import { BaseRecord } from "./BaseRecord";

export const Request: core.serialization.ObjectSchema<serializers.Request.Raw, CoperniqApi.Request> = core.serialization
    .object({
        trades: core.serialization.list(core.serialization.string()).optional(),
        value: core.serialization.number().optional(),
        size: core.serialization.number().optional(),
        confidence: core.serialization.number().optional(),
        workflowId: core.serialization.number().optional(),
        clientId: core.serialization.number().optional(),
        status: core.serialization.string().optional(),
    })
    .extend(BaseRecord);

export declare namespace Request {
    interface Raw extends BaseRecord.Raw {
        trades?: string[] | null;
        value?: number | null;
        size?: number | null;
        confidence?: number | null;
        workflowId?: number | null;
        clientId?: number | null;
        status?: string | null;
    }
}
